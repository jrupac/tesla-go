# Grandfather in the misspelled metric. Oops.
job:odometer:value{job="tesla_go",instance="",exported_job=""} =
  odometric_metric{exported_job="tesla_collector"}
    or
  odometer_metric{exported_job="tesla_collector"}

job:battery_percent:value{job="tesla_go",instance="",exported_job=""} = battery_level_metric{exported_job="tesla_collector"}

job:battery_range:value{job="tesla_go",instance="",exported_job=""} = battery_range_metric{exported_job="tesla_collector"}

job:firmware_version:value{job="tesla_go",instance="",exported_job=""} = firmware_metric{exported_job="tesla_collector"}

job:odometer:delta1d = delta(job:odometer:value{job="tesla_go"}[1d])

job:approx_energy_consumption:ratio_rate{job="tesla_go"} =
  clamp_min(
    (
      (
        # Delta of battery level for 70kWh vehicle
        (delta(job:battery_percent:value{job="tesla_go"}[1h]) * -70 * 10)
          and
        # Only applies if the battery level has decreased by 3% in last 1h
        (delta(job:battery_percent:value{job="tesla_go"}[1h]) < -3)
      )
        /
      (
        # Delta of odometer reading
        delta(job:odometer:value{job="tesla_go"}[1h])
          and
        # Only applies if car has traveled at least 3mi in the last 1h
        (delta(job:odometer:value{job="tesla_go"}[1h]) > 3)
      )
    ), 0)
